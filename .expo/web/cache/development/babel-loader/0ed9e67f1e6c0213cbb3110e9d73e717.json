{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useState = useState('Unknown'),\n      _useState2 = _slicedToArray(_useState, 2),\n      country = _useState2[0],\n      setCountry = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.titleText,\n      children: \"Set Your Run\"\n    }), _jsx(View, {\n      style: styles.suggestionGoalContainer,\n      children: _jsxs(View, {\n        style: styles.suggestedGoal,\n        children: [_jsxs(View, {\n          style: styles.infoRow,\n          children: [_jsx(Image, {\n            style: styles.runner,\n            source: require(\"./assets/runner.png\")\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.suggestionTitleText,\n              children: \"Need Suggested Goals?\"\n            }), _jsxs(Text, {\n              style: styles.suggestionText,\n              children: [\"Based on your previous usage, we can give \", \"\\n\", \"you suggested goals on time, pace and \", \"\\n\", \"distance.\"]\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.infoRow,\n          children: [_jsx(View, {\n            style: styles.noButton,\n            children: _jsx(TouchableOpacity, {\n              children: _jsx(Text, {\n                style: styles.altText,\n                children: \"No\"\n              })\n            })\n          }), _jsx(View, {\n            style: styles.yesButton,\n            children: _jsx(TouchableOpacity, {\n              children: _jsx(Text, {\n                style: styles.defaultText,\n                children: \"Yes\"\n              })\n            })\n          })]\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.infoContainer,\n      children: [_jsx(Text, {\n        style: styles.infoTitle,\n        children: \"Time Goal\"\n      }), _jsx(View, {\n        children: _jsxs(View, {\n          style: styles.infoRow,\n          children: [_jsx(View, {\n            style: styles.pickerColumn,\n            children: _jsxs(Picker, {\n              selectedValue: country,\n              onValueChange: function onValueChange(value, index) {\n                return setCountry(value);\n              },\n              mode: \"dropdown\",\n              style: styles.picker,\n              children: [_jsx(Picker.Item, {\n                label: \"Please select your country\",\n                value: \"Unknown\"\n              }), _jsx(Picker.Item, {\n                label: \"0\",\n                value: \"Australia\"\n              }), _jsx(Picker.Item, {\n                label: \"1\",\n                value: \"Belgium\"\n              }), _jsx(Picker.Item, {\n                label: \"2\",\n                value: \"Canada\"\n              }), _jsx(Picker.Item, {\n                label: \"3\",\n                value: \"India\"\n              }), _jsx(Picker.Item, {\n                label: \"4\",\n                value: \"Japan\"\n              })]\n            })\n          }), _jsx(Text, {\n            children: \":\"\n          }), _jsxs(Picker, {\n            selectedValue: country,\n            onValueChange: function onValueChange(value, index) {\n              return setCountry(value);\n            },\n            mode: \"dropdown\",\n            style: styles.picker,\n            children: [_jsx(Picker.Item, {\n              label: \"Please select your country\",\n              value: \"Unknown\"\n            }), _jsx(Picker.Item, {\n              label: \"Australia\",\n              value: \"Australia\"\n            }), _jsx(Picker.Item, {\n              label: \"Belgium\",\n              value: \"Belgium\"\n            }), _jsx(Picker.Item, {\n              label: \"Canada\",\n              value: \"Canada\"\n            }), _jsx(Picker.Item, {\n              label: \"India\",\n              value: \"India\"\n            }), _jsx(Picker.Item, {\n              label: \"Japan\",\n              value: \"Japan\"\n            })]\n          }), _jsx(Text, {\n            children: \":\"\n          }), _jsxs(Picker, {\n            selectedValue: country,\n            onValueChange: function onValueChange(value, index) {\n              return setCountry(value);\n            },\n            mode: \"dropdown\",\n            style: styles.picker,\n            children: [_jsx(Picker.Item, {\n              label: \"Please select your country\",\n              value: \"Unknown\"\n            }), _jsx(Picker.Item, {\n              label: \"Australia\",\n              value: \"Australia\"\n            }), _jsx(Picker.Item, {\n              label: \"Belgium\",\n              value: \"Belgium\"\n            }), _jsx(Picker.Item, {\n              label: \"Canada\",\n              value: \"Canada\"\n            }), _jsx(Picker.Item, {\n              label: \"India\",\n              value: \"India\"\n            }), _jsx(Picker.Item, {\n              label: \"Japan\",\n              value: \"Japan\"\n            })]\n          })]\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F5F5F5\",\n    fontFamily: \"sf compact text\"\n  },\n  pickerColumn: {\n    height: 50,\n    overflow: \"hidden\"\n  },\n  picker: {\n    width: 110\n  },\n  infoContainer: {\n    paddingLeft: 30,\n    paddingTop: 30\n  },\n  runner: {\n    marginLeft: 10,\n    marginTop: 10,\n    width: 45,\n    height: 45\n  },\n  suggestionGoalContainer: {\n    alignItems: \"center\",\n    width: '100%'\n  },\n  infoRow: {\n    flexDirection: \"row\",\n    marginBottom: 3\n  },\n  infoTitle: {\n    fontSize: 23,\n    fontWeight: \"600\"\n  },\n  suggestedGoal: {\n    marginTop: 30,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    width: \"90%\",\n    height: 130,\n    backgroundColor: \"#fff\",\n    shadowColor: '#171717',\n    shadowOpacity: 0.1,\n    shadowRadius: 7,\n    shadowOffset: {\n      width: -7,\n      height: 7\n    }\n  },\n  titleText: {\n    paddingLeft: 30,\n    paddingTop: 60,\n    fontSize: 30,\n    fontWeight: \"700\",\n    letterSpacing: 1\n  },\n  suggestionTitleText: {\n    color: \"#000\",\n    fontSize: 15,\n    fontWeight: \"700\",\n    marginTop: 6,\n    marginLeft: 10\n  },\n  suggestionText: {\n    marginTop: 4,\n    marginLeft: 10\n  },\n  defaultText: {\n    color: \"#fff\",\n    fontSize: 17,\n    fontWeight: \"600\"\n  },\n  altText: {\n    color: \"#000\",\n    fontSize: 17,\n    fontWeight: \"600\"\n  },\n  inputBox: {\n    marginTop: 5,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingBottom: 5,\n    backgroundColor: \"#F5F5F5\",\n    width: \"90%\",\n    height: 50,\n    borderRadius: 10,\n    fontSize: 20\n  },\n  buttonBox: {\n    width: \"100%\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    bottom: 150\n  },\n  button: {\n    marginTop: 7,\n    width: 250,\n    height: 50,\n    borderRadius: 7,\n    backgroundColor: \"#0263FF\",\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  yesButton: {\n    width: 100,\n    height: 30,\n    borderRadius: 7,\n    backgroundColor: \"#0263FF\",\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  noButton: {\n    marginLeft: 120,\n    marginRight: 5,\n    width: 100,\n    height: 30,\n    borderRadius: 7,\n    backgroundColor: \"#E9E9E9\",\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/ryanj/Desktop/HAIID/App.js"],"names":["Picker","useState","Login","country","setCountry","styles","container","titleText","suggestionGoalContainer","suggestedGoal","infoRow","runner","require","suggestionTitleText","suggestionText","noButton","altText","yesButton","defaultText","infoContainer","infoTitle","pickerColumn","value","index","picker","StyleSheet","create","flex","backgroundColor","fontFamily","height","overflow","width","paddingLeft","paddingTop","marginLeft","marginTop","alignItems","flexDirection","marginBottom","fontSize","fontWeight","borderRadius","borderWidth","borderColor","shadowColor","shadowOpacity","shadowRadius","shadowOffset","letterSpacing","color","inputBox","paddingRight","paddingBottom","buttonBox","position","bottom","button","justifyContent","marginRight"],"mappings":"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","sourcesContent":["import {StyleSheet, Text, View, TouchableOpacity, Image} from \"react-native\";\nimport {Picker} from \"@react-native-picker/picker\";\nimport {useState} from \"react\";\n\nconst Login = () => {\n  const [country, setCountry] = useState('Unknown');\n  \n\n  return (\n    <View style={styles.container}>\n      \n       \n\n        <Text style={styles.titleText}>Set Your Run</Text>\n\n        <View style={styles.suggestionGoalContainer}>\n          <View style={styles.suggestedGoal}>\n              <View style={styles.infoRow}>\n                <Image style={styles.runner} source={require(\"./assets/runner.png\")}/>\n                <View>\n                  <Text style={styles.suggestionTitleText}>Need Suggested Goals?</Text>\n                  <Text style={styles.suggestionText}>Based on your previous usage, we can give {\"\\n\"}you suggested goals on time, pace and {\"\\n\"}distance.</Text>\n                </View>\n              </View>\n              <View style={styles.infoRow}>\n                <View style={styles.noButton}>\n                    <TouchableOpacity>\n                      <Text style={styles.altText}>No</Text>\n                    </TouchableOpacity>\n                </View>\n                <View style={styles.yesButton}>\n                    <TouchableOpacity>\n                      <Text style={styles.defaultText}>Yes</Text>\n                    </TouchableOpacity>\n                </View>\n              </View>\n          </View> \n        </View>\n        <View style={styles.infoContainer}>\n          <Text style={styles.infoTitle}>Time Goal</Text>\n          <View>\n            <View style={styles.infoRow}>\n              <View style={styles.pickerColumn}>\n              <Picker selectedValue={country} onValueChange={(value, index) => setCountry(value)} mode=\"dropdown\" style={styles.picker}>\n                <Picker.Item label=\"Please select your country\" value=\"Unknown\" />\n                <Picker.Item label=\"0\" value=\"Australia\" />\n                <Picker.Item label=\"1\" value=\"Belgium\" />\n                <Picker.Item label=\"2\" value=\"Canada\" />\n                <Picker.Item label=\"3\" value=\"India\" />\n                <Picker.Item label=\"4\" value=\"Japan\" />\n              </Picker>\n\n              </View>\n          <Text>:</Text>\n          <Picker selectedValue={country} onValueChange={(value, index) => setCountry(value)} mode=\"dropdown\" style={styles.picker}>\n            <Picker.Item label=\"Please select your country\" value=\"Unknown\" />\n            <Picker.Item label=\"Australia\" value=\"Australia\" />\n            <Picker.Item label=\"Belgium\" value=\"Belgium\" />\n            <Picker.Item label=\"Canada\" value=\"Canada\" />\n            <Picker.Item label=\"India\" value=\"India\" />\n            <Picker.Item label=\"Japan\" value=\"Japan\" />\n          </Picker>\n          <Text>:</Text>\n          <Picker selectedValue={country} onValueChange={(value, index) => setCountry(value)} mode=\"dropdown\" style={styles.picker}>\n            <Picker.Item label=\"Please select your country\" value=\"Unknown\" />\n            <Picker.Item label=\"Australia\" value=\"Australia\" />\n            <Picker.Item label=\"Belgium\" value=\"Belgium\" />\n            <Picker.Item label=\"Canada\" value=\"Canada\" />\n            <Picker.Item label=\"India\" value=\"India\" />\n            <Picker.Item label=\"Japan\" value=\"Japan\" />\n          </Picker>\n\n            </View>\n          \n          \n          \n          </View>\n        </View>\n        \n\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F5F5F5\",\n    fontFamily: \"sf compact text\",\n  },\n\n  pickerColumn: {\n    height: 50,\n    overflow: \"hidden\",\n  },\n\n\n  picker: {\n    width: 110\n  },\n\n  infoContainer: {\n    paddingLeft: 30,\n    paddingTop: 30    \n  },\n\n  runner: {\n    marginLeft: 10,\n    marginTop: 10,\n    width: 45,\n    height: 45\n  },  \n\n  suggestionGoalContainer: {\n    alignItems: \"center\",\n    width: '100%',\n  },\n\n  infoRow: {\n    flexDirection:\"row\",\n    marginBottom: 3\n  },\n\n  infoTitle: {\n    fontSize: 23,\n    fontWeight: \"600\",\n  },\n\n  suggestedGoal: {\n    marginTop: 30,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    width: \"90%\",\n    height: 130,\n    backgroundColor: \"#fff\",\n    shadowColor: '#171717',\n    shadowOpacity: 0.1,\n    shadowRadius: 7,\n    shadowOffset: {width: -7, height: 7}\n  },  \n\n  titleText: {\n    paddingLeft: 30,\n    paddingTop: 60,   \n    fontSize: 30,\n    fontWeight: \"700\",\n    letterSpacing: 1,\n  },\n\n  suggestionTitleText: {\n    color: \"#000\",\n    fontSize: 15,\n    fontWeight: \"700\",\n    marginTop: 6,\n    marginLeft: 10,\n  },\n\n  suggestionText: {\n    marginTop: 4,\n    marginLeft: 10,\n  },\n\n  defaultText: {\n    color: \"#fff\",\n    fontSize: 17,\n    fontWeight: \"600\"\n  },\n\n  altText: {\n    color: \"#000\",\n    fontSize: 17,\n    fontWeight: \"600\"\n  },\n\n  inputBox: {\n    marginTop: 5,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingBottom: 5,\n    backgroundColor: \"#F5F5F5\",\n    width: \"90%\",\n    height: 50,\n    borderRadius: 10,\n    fontSize: 20\n  },\n\n  buttonBox: {\n    width: \"100%\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    bottom: 150,\n  },\n\n  button: {\n    marginTop: 7,\n    width: 250,\n    height: 50,\n    borderRadius: 7,\n    backgroundColor: \"#0263FF\",\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n\n  yesButton: {\n    width: 100,\n    height: 30,\n    borderRadius: 7,\n    backgroundColor: \"#0263FF\",\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  noButton: {\n    marginLeft: 120,\n    marginRight: 5,\n    width: 100,\n    height: 30,\n    borderRadius: 7,\n    backgroundColor: \"#E9E9E9\",\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}