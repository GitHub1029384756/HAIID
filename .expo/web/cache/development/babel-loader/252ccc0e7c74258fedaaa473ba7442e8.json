{"ast":null,"code":"export default function (nativeEvent, selected, options, handleSelection, scrollPosition, horizontal) {\n  var cursor = horizontal ? nativeEvent.contentOffset.x : nativeEvent.contentOffset.y;\n  var SP = scrollPosition || 0;\n\n  if (scrollPosition === null) {\n    if (options[selected]) {\n      var option = options[selected];\n      SP = horizontal ? option.left : option.top;\n    }\n  }\n\n  var direction = horizontal ? SP > cursor ? 'right' : 'left' : SP > cursor ? 'down' : 'top';\n\n  switch (direction) {\n    case 'left':\n      if (options[selected + 1]) {\n        if (cursor > options[selected].right) {\n          handleSelection(options[selected + 1].item, options[selected + 1].index, cursor);\n        }\n      }\n\n      break;\n\n    case 'right':\n      if (options[selected - 1]) {\n        if (cursor < options[selected].left) {\n          handleSelection(options[selected - 1].item, options[selected - 1].index, cursor);\n        }\n      }\n\n      break;\n\n    case 'top':\n      if (options[selected + 1]) {\n        if (cursor > options[selected].bottom) {\n          handleSelection(options[selected + 1].item, options[selected + 1].index, cursor);\n        }\n      }\n\n      break;\n\n    case 'down':\n      if (options[selected - 1]) {\n        if (cursor < options[selected].top) {\n          handleSelection(options[selected - 1].item, options[selected - 1].index, cursor);\n        }\n      }\n\n      break;\n\n    default:\n      break;\n  }\n}","map":{"version":3,"sources":["C:/Users/ryanj/Desktop/HAIID/node_modules/react-native-smooth-picker/build/functions/onSelect.js"],"names":["nativeEvent","selected","options","handleSelection","scrollPosition","horizontal","cursor","contentOffset","x","y","SP","option","left","top","direction","right","item","index","bottom"],"mappings":"AAAA,eAAe,UAAUA,WAAV,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,eAA1C,EAA2DC,cAA3D,EAA2EC,UAA3E,EAAuF;AAClG,MAAMC,MAAM,GAAGD,UAAU,GACnBL,WAAW,CAACO,aAAZ,CAA0BC,CADP,GAEnBR,WAAW,CAACO,aAAZ,CAA0BE,CAFhC;AAGA,MAAIC,EAAE,GAAGN,cAAc,IAAI,CAA3B;;AACA,MAAIA,cAAc,KAAK,IAAvB,EAA6B;AACzB,QAAIF,OAAO,CAACD,QAAD,CAAX,EAAuB;AACnB,UAAMU,MAAM,GAAGT,OAAO,CAACD,QAAD,CAAtB;AACAS,MAAAA,EAAE,GAAGL,UAAU,GAAGM,MAAM,CAACC,IAAV,GAAiBD,MAAM,CAACE,GAAvC;AACH;AACJ;;AACD,MAAMC,SAAS,GAAGT,UAAU,GACtBK,EAAE,GAAGJ,MAAL,GACI,OADJ,GAEI,MAHkB,GAItBI,EAAE,GAAGJ,MAAL,GACI,MADJ,GAEI,KANV;;AAOA,UAAQQ,SAAR;AACI,SAAK,MAAL;AACI,UAAIZ,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAX,EAA2B;AACvB,YAAIK,MAAM,GAAGJ,OAAO,CAACD,QAAD,CAAP,CAAkBc,KAA/B,EAAsC;AAClCZ,UAAAA,eAAe,CAACD,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAP,CAAsBe,IAAvB,EAA6Bd,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAP,CAAsBgB,KAAnD,EAA0DX,MAA1D,CAAf;AACH;AACJ;;AACD;;AACJ,SAAK,OAAL;AACI,UAAIJ,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAX,EAA2B;AACvB,YAAIK,MAAM,GAAGJ,OAAO,CAACD,QAAD,CAAP,CAAkBW,IAA/B,EAAqC;AACjCT,UAAAA,eAAe,CAACD,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAP,CAAsBe,IAAvB,EAA6Bd,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAP,CAAsBgB,KAAnD,EAA0DX,MAA1D,CAAf;AACH;AACJ;;AACD;;AACJ,SAAK,KAAL;AACI,UAAIJ,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAX,EAA2B;AACvB,YAAIK,MAAM,GAAGJ,OAAO,CAACD,QAAD,CAAP,CAAkBiB,MAA/B,EAAuC;AACnCf,UAAAA,eAAe,CAACD,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAP,CAAsBe,IAAvB,EAA6Bd,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAP,CAAsBgB,KAAnD,EAA0DX,MAA1D,CAAf;AACH;AACJ;;AACD;;AACJ,SAAK,MAAL;AACI,UAAIJ,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAX,EAA2B;AACvB,YAAIK,MAAM,GAAGJ,OAAO,CAACD,QAAD,CAAP,CAAkBY,GAA/B,EAAoC;AAChCV,UAAAA,eAAe,CAACD,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAP,CAAsBe,IAAvB,EAA6Bd,OAAO,CAACD,QAAQ,GAAG,CAAZ,CAAP,CAAsBgB,KAAnD,EAA0DX,MAA1D,CAAf;AACH;AACJ;;AACD;;AACJ;AACI;AA9BR;AAgCH","sourcesContent":["export default function (nativeEvent, selected, options, handleSelection, scrollPosition, horizontal) {\n    const cursor = horizontal\n        ? nativeEvent.contentOffset.x\n        : nativeEvent.contentOffset.y;\n    let SP = scrollPosition || 0;\n    if (scrollPosition === null) {\n        if (options[selected]) {\n            const option = options[selected];\n            SP = horizontal ? option.left : option.top;\n        }\n    }\n    const direction = horizontal\n        ? SP > cursor\n            ? 'right'\n            : 'left'\n        : SP > cursor\n            ? 'down'\n            : 'top';\n    switch (direction) {\n        case 'left':\n            if (options[selected + 1]) {\n                if (cursor > options[selected].right) {\n                    handleSelection(options[selected + 1].item, options[selected + 1].index, cursor);\n                }\n            }\n            break;\n        case 'right':\n            if (options[selected - 1]) {\n                if (cursor < options[selected].left) {\n                    handleSelection(options[selected - 1].item, options[selected - 1].index, cursor);\n                }\n            }\n            break;\n        case 'top':\n            if (options[selected + 1]) {\n                if (cursor > options[selected].bottom) {\n                    handleSelection(options[selected + 1].item, options[selected + 1].index, cursor);\n                }\n            }\n            break;\n        case 'down':\n            if (options[selected - 1]) {\n                if (cursor < options[selected].top) {\n                    handleSelection(options[selected - 1].item, options[selected - 1].index, cursor);\n                }\n            }\n            break;\n        default:\n            break;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}